openapi: 3.0.3
info:
  title: Drink It API
  description: Drink It Apis for frontend/backend communication
  version: 1.0.0
servers:
  - url: http://127.0.0.1:8080/
    description: Dev server
tags:
  - name: cellars
    description: Cellars operation
  - name: auth
    description: Authentication operations
  - name: registration
    description: User Registration operations
  - name: user
    description: User operations
  - name: search
    description: Search operations

paths:
  /api/cellars:
    get:
      operationId: findCellars
      tags:
        - cellars
      summary: Find cellars
      description: |
        Returns all cellars you allow to see (owner or allowed from other users)
      responses:
        '403':
          description: Forbidden
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: 'cellarsResponse.yaml#/components/schemas/CellarsResponse'
    post:
      operationId: createCellar
      tags:
        - cellars
      summary: Create a new cellar
      description: |
        Create a new cellar for the connected user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'cellarsParameters.yaml#/components/schemas/CreateCellarRequest'
      responses:
        '403':
          description: Forbidden
        '400':
          description: Bad Request (maybe wrong object validation)
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/CellarId'

  /api/cellars/{cellarId}:
    delete:
      operationId: deleteCellar
      tags:
        - cellars
      summary: Delete cellar by Id
      description: |
        Delete a cellar that you are the owner
      parameters:
        - $ref: 'cellarsParameters.yaml#/components/parameters/cellarId'
      responses:
        '403':
          description: Forbidden
        '204':
          description: Cellar Deleted

  /api/auth/login:
    post:
      operationId: authenticateUser
      tags:
        - auth
      summary: Authenticate a user
      description: |
        Authenticate user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'authParameters.yaml#/components/schemas/SignInRequest'
      responses:
        '401':
          description: Unauthorized
        '400':
          description: Bad request
        '200':
          description: User signed in

  /api/registration/new:
    post:
      operationId: createNewUser
      tags:
        - registration
      summary: Create a new user
      description: | 
        Create a new user with email and password (this user is disable until email confirmation)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'registrationParameters.yaml#/components/schemas/CreateUserRequest'
      responses:
        '400':
          description: Bad request
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/UserId'

  /api/registration/email/confirmation:
    post:
      operationId: confirmUserEmail
      tags:
        - registration
      summary: Confirm User Email
      description: |
        Confirm the created user email using the validation code sent by the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'registrationParameters.yaml#/components/schemas/ConfirmEmailRequest'
      responses:
        '403':
          description: Forbidden
        '400':
          description: Bad request
        '200':
          description: Email confirmed

  /api/registration/email/resend/validation:
    post:
      operationId: resendValidationToken
      tags:
        - registration
      summary: Resend validation token
      description: |
        Resend validation token for connected user
      responses:
        '403':
          description: Forbidden
        '400':
          description: Bad request
        '200':
          description: Validation token resent

  /api/registration/user/information:
    post:
      operationId: completeUserInformation
      tags:
        - registration
      summary: Complete user information
      description: |
        Complete required user information like firstname/lastname/...
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'registrationParameters.yaml#/components/schemas/CompleteUserInformationRequest'
      responses:
        '403':
          description: Forbidden
        '400':
          description: Bad request
        '200':
          description: User information completed

  /api/user/me:
    get:
      operationId: getConnectedUserInfo
      tags:
        - user
      summary: Get connected user information
      description: |
        Get user information (roles, webpreferences, ...)
      responses:
        '403':
          description: Forbidden
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: 'usersResponse.yaml#/components/schemas/ConnectedUserInformation'

  /api/search/upload:
    post:
      operationId: searchByPhotoUpload
      tags:
        - search
      summary: Search bottle using a photo
      description: |
        Search bottle using a photo
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '403':
          description: Forbidden
        '200':
          description: Success