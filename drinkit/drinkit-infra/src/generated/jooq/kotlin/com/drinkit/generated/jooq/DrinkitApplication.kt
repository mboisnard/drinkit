/*
 * This file is generated by jOOQ.
 */
package com.drinkit.generated.jooq


import com.drinkit.generated.jooq.tables.Cellar
import com.drinkit.generated.jooq.tables.ExchangeRate
import com.drinkit.generated.jooq.tables.User
import com.drinkit.generated.jooq.tables.UserEvent
import com.drinkit.generated.jooq.tables.VerificationToken

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.DSL
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class DrinkitApplication : SchemaImpl(DSL.name("drinkit_application"), DefaultCatalog.DEFAULT_CATALOG, DSL.comment("")) {
    companion object {

        /**
         * The reference instance of <code>drinkit_application</code>
         */
        val DRINKIT_APPLICATION: DrinkitApplication = DrinkitApplication()
    }

    /**
     * The table <code>drinkit_application.cellar</code>.
     */
    val CELLAR: Cellar get() = Cellar.CELLAR

    /**
     * The table <code>drinkit_application.exchange_rate</code>.
     */
    val EXCHANGE_RATE: ExchangeRate get() = ExchangeRate.EXCHANGE_RATE

    /**
     * The table <code>drinkit_application.user</code>.
     */
    val USER: User get() = User.USER

    /**
     * The table <code>drinkit_application.user_event</code>.
     */
    val USER_EVENT: UserEvent get() = UserEvent.USER_EVENT

    /**
     * The table <code>drinkit_application.verification_token</code>.
     */
    val VERIFICATION_TOKEN: VerificationToken get() = VerificationToken.VERIFICATION_TOKEN

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        Cellar.CELLAR,
        ExchangeRate.EXCHANGE_RATE,
        User.USER,
        UserEvent.USER_EVENT,
        VerificationToken.VERIFICATION_TOKEN
    )
}
