/*
 * This file is generated by jOOQ.
 */
package com.drinkit.generated.jooq.tables.records


import com.drinkit.generated.jooq.tables.Cellar

import java.time.LocalDateTime

import org.jooq.JSONB
import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class CellarRecord private constructor() : UpdatableRecordImpl<CellarRecord>(Cellar.CELLAR) {

    open var id: String
        set(value): Unit = set(0, value)
        get(): String = get(0) as String

    open var ownerId: String
        set(value): Unit = set(1, value)
        get(): String = get(1) as String

    open var name: String
        set(value): Unit = set(2, value)
        get(): String = get(2) as String

    open var location: JSONB
        set(value): Unit = set(3, value)
        get(): JSONB = get(3) as JSONB

    open var rooms: JSONB
        set(value): Unit = set(4, value)
        get(): JSONB = get(4) as JSONB

    open var modified: LocalDateTime
        set(value): Unit = set(5, value)
        get(): LocalDateTime = get(5) as LocalDateTime

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<String?> = super.key() as Record1<String?>

    /**
     * Create a detached, initialised CellarRecord
     */
    constructor(id: String, ownerId: String, name: String, location: JSONB, rooms: JSONB, modified: LocalDateTime): this() {
        this.id = id
        this.ownerId = ownerId
        this.name = name
        this.location = location
        this.rooms = rooms
        this.modified = modified
        resetChangedOnNotNull()
    }
}
